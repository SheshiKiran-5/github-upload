# -*- coding: utf-8 -*-
"""AI_LAB_FAT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1esunlPhOWj9bt1nB4AV_eWLAqbvY7quG
"""

#IMPORT ALL ESSENTIAL LIBRARIES 
import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import export_graphviz
from six import StringIO
from sklearn.datasets import load_diabetes
from sklearn import tree
from IPython.display import Image 
import pydotplus

#LOAD DATA from the DATASET
data = pd.read_csv(r'designation_prediction.csv')
#Shape of the dataset i.e; rows and columns
print("Dataset Shape:",data.shape)
#Displaying the data from the dataset 
data.head(45)

X = data.iloc[:, :7]
Y = data.iloc[:, 7]
X = np.array(X)
Y = np.array(Y)

X

Y

# creating a dict file 
Y1 = {'VP': 1,'AVP': 2,'Project Lead': 3,'Senior Software Engineer':4,'Software Engineer':5}
Y = [Y1[item] for item in Y]
print(Y)



X1=X[:,1]
X2=X[:,2]
X4=X[:,4]
X6=X[:,6]
X11={'Btech CSE':0,'Btech IT':1}
X22={'Mtech':0,'MBA':1,"MS":2}
X44={'VP': 1,'AVP': 2,'Project Lead': 3,'Senior Software Engineer':4,'Software Engineer':5}
X66={'MNC':0,'SME':1,'Startup':2}
X1=[X11[item] for item in X1]
X2=[X22[item] for item in X2]
X4=[X44[item] for item in X4]
X6=[X66[item] for item in X6]
X[:,1]=X1
X[:,2]=X2
X[:,4]=X4
X[:,6]=X6

print(X)

X3=X[:,3]
X33={'Excellent':0,'Good':1,'Bad':2,'Very Bad':3}
X3=[X33[item] for item in X3]
X[:,3]=X3

print(X)

tree = DecisionTreeClassifier(criterion = 'gini',splitter='random', 
max_depth = 4)
tree.fit(X, Y)

dot_data = StringIO()
export_graphviz(tree, out_file=dot_data, filled=True, rounded=True,special_characters=True,class_names=['1','2','3','4','5'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue()) 
Image(graph.create_png(), width =1000, height = 1000)

predict = tree.predict(X)
predict

from sklearn import metrics
print('Performance Measure: ', metrics.accuracy_score(Y, predict))
print('Confusion Matrix\n', metrics.confusion_matrix(Y, predict))

I1={'Btech CSE':0,'Btech IT':1}
I2={'Mtech':0,'MBA':1,"MS":2}
I3={'Excellent':0,'Good':1,'Bad':2,'Very Bad':3}
I4= {'VP': 1,'AVP': 2,'Project Lead': 3,'Senior Software Engineer':4,'Software Engineer':5}
I6={'MNC':0,'SME':1,'Startup':2}
I00=int(input())
I000=I00
I11=input()
I22=input()
I33=input()
I44=input()
I55=int(input())
I555=I55
I66=input()
if (I11=="Btech CSE"):
  I111=0
elif(I11=="Btech IT"):
  I111=1
if (I22=="Mtech"):
  I222=0
elif(I11=="MBA"):
  I222=1
elif (I11=="MS"):
  I222=2
if (I33=="Excellent"):
  I333=0
elif(I33=="Good"):
  I333=1
elif (I33=="Bad"):
  I333=2
elif (I33=="Very Bad"):
  I333=3
if (I44=="VP"):
  I444=1
elif(I44=="AVP"):
  I444=2
elif (I44=="Project Lead"):
  I444=3
elif (I44=="Senior Software Engineer"):
  I444=4
elif (I44=="Software Engineer"):
  I444=5
if (I66=="MNC"):
  I666=0
elif(I66=="SME"):
  I666=1
elif (I66=="Startup"):
  I666=2
arr = np.array([[I000,I111,I222,I333,I444,I555,I666]])
predict = tree.predict(arr)
Output=predict[0]
if (Output==1):
  O1=1"VP"
elif(Output==2):
  O1="AVP"
elif (Output==3):
  O1="Project Lead"
elif (Output==4):
  O1="Senior Software Engineer"
elif (Output==5):
  O1="Software Engineer"
print(O1)

